/* Usage:
  @include breakpoint($breakpoint: one of the breakpoint keys you want to include defined in the $breakpoints map ("null" by default),
                      $media-feature: max-width (by default), but you can use also "min-height", "max-height",
                                      "aspect-ratio" or "resolution" features,
                      $breakpoint-value: custom breakpoint value ("null" by default) { some code }.
  Note: You can write the keyword argument, like the below example:
    @include breakpoint($breakpoint: up-to-desktop) { some code }
    This will convert to:
       @media (max-width: 1439px) { some code }

    Or include it without any keyword arguments, like the below example:
    @include breakpoint(up-to-desktop) { some code }
    This will also convert to:
       @media (max-width: 1439px) { some code }

  If you want to use custom breakpoint that isn't in the $breakpoints map, give your custom breakpoint value to the
  $breakpoint-value argument, like:
       @include breakpoint($breakpoint-value: 1380px) { some code };
  This will convert to:
       @media (max-width: 1379px) { some code }

  Note: The breakpoint value will always subtract -1px to prevent future conflicts in code at the specific screen
        resolutions when the $media-feature is "max-width" like in the above examples.

  If you want to use min-width $media-feature, just give a "min-width" value to the $media-feature argument, like:
      @include breakpoint($media-feature: min-width) { some code };
*/

// Map of default breakpoint keys and values.
$breakpoints: (
  smallest-landscape: 568px,
  up-to-mobile: 768px,
  up-to-tablet: 1024px,
  up-to-tablet-landscape: 1280px,
  up-to-laptop: 1366px,
  up-to-desktop: 1440px,
);

@mixin breakpoint($breakpoint: null, $media-feature: max-width, $breakpoint-value: null) {
  @if map-has-key($breakpoints, $breakpoint) {
    // If the breakpoint exists in the map, get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);
  }
  // The default $media-feature is "max-width".
  @if $media-feature == max-width {
    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }
  } @else {
    @media ($media-feature: $breakpoint-value) {
      @content;
    }
  }
}

body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
}

.header {
  background-color: #091E42;

  .section-inner-container {
    padding: 12px 15px;
  }
}

.footer {
  background-color: #091E42;
}

a,
.link {
  cursor: pointer;
  text-decoration: none;
  font-size: 14px;
  color: #0052CC;
  display: inline-flex;

  fa-icon {
    margin-left: 2px;
  }

  &.small {
    font-size: 12px;
  }

  &:disabled,
  &.disabled {
    pointer-events: none;
    opacity: 0.6;
  }

  &:hover {
    text-decoration: underline;

    fa-icon {
      margin-left: 5px;
      transition: all 0.15s ease-in;
    }
  }
}

.text-white {
  color: #ffffff;
}

.text-light-grey {
  color: #5E6C84;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.navigation-link {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 3px;
  color: #ffffff;
  font-weight: 600;
  padding: 5px 10px;
  transition: background-color 0.15s ease-in;

  &:hover {
    text-decoration: none;
    background-color: rgba(#ffffff, 0.35);
  }
}

.footer {
  background-color: #091E42;
}

.hero-text {
  font-size: 52px;
  font-weight: 500;
}

.heading-3 {
  font-size: 36px;
  font-weight: 500;
}

.heading-5 {
  font-size: 24px;
  font-weight: 500;
}

.content-description {
  font-size: 16px;
}

.paragraph-text {
  font-size: 14px;
  color: #172B4D;
}

.icon-rectangular {
  color: #ffffff;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 4px;

  &.brand {
    background-color: #0065FF;
  }

  &.foundations {
    background-color: #00C7E6;
  }

  &.content {
    background-color: #FF5630;
  }

  &.resources {
    background-color: #6554C0;
  }

  &.small {
    width: 24px;
    height: 24px;
  }

  &.medium {
    width: 48px;
    height: 48px;
  }
}

.card-surface {
  box-shadow: 0 1px 1px rgba(9,30,66,0.25),0 0 1px 0 rgba(9,30,66,0.31);
  background-color: #ffffff;
  border-radius: 4px;
  padding: 25px;
  min-height: 270px;
  cursor: pointer;

  &:hover {
    box-shadow: 0 8px 16px -4px rgba(9,30,66,0.25),0 0 1px rgba(9,30,66,0.31);
  }
}

.section-inner-container {
  max-width: 1200px;
  width: 100%;
  margin: auto;
}

.background-color-dark-blue {
  background-color: #172B4D;
}

.background-color-light-grey {
  background-color: #FAFBFC;
}

.background-color-neutral-grey {
  background-color: #F4F5F7;
}

.display-grid {
  display: grid;
  grid-gap: 16px;

  &.flow-column {
    grid-auto-flow: column;
  }

  &.col-2-layout {
    grid-template-columns: repeat(2, 1fr);
  }

  &.col-3-layout {
    grid-template-columns: repeat(3, 1fr);
  }

  &.col-1fr-2fr-layout {
    grid-template-columns: 1fr 2fr;
  }
}

.display-flex {
  display: flex;
}

.flex-direction {
  &-column {
    flex-direction: column;
  }
}

.justify-content {
  &-center {
    justify-content: center;
  }
}

.align-items {
  &-start {
    align-items: start;
  }

  &-center {
    align-items: center;
  }
}

.section {
  padding: 40px;
}
